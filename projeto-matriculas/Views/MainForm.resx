<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="binArquivo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAidJREFUOE+9kslPU1EUxt+/gQPIxqU7p4hiiKKx0VaDIA61YooiUQsEqolTHBa6
        0ZiYGGOICyTqVqNQKwuJms7tKy1t8VWsAYdosX19vdjecz/TvjqkujPxS77cs/h+95x7ciXpXzT/dMHS
        vLNmIOdYaM86au2Zkbq+9OP6ZdW5v0pz1tzXnIugOhYjO1qLryN1SD9Z8i39sH5tdfYPzb9qGmUzd6Gl
        7iEzPYw5ZRhflCGobwY5i/SqLGJTmXxU1eQuNee3qjlfh5rzmtW5McN1iX96kBUfhyA+3IF4fxti5iZE
        6ipIOQuaOgFK9IPivaC4DRQ7DorZQPEeFCPdmsRnB7lIXYOYvgJKXgApp3Uo3geKHQOf7AaPHgaPdoJH
        rZWzE4WwlUl89hb/Cb4+BUoMlG/nk0f0cKQDfMICPmH+zftRCFmYxN/d4JS8WAH7wUvdoocqkBk8vAck
        7wLJbaBQq265DcVgO5Po7WVGyhlQwq6PWQInDoCH9+pQqAUU3A4KGkGBbbqDRhQDLUziyUuMpk6Wl1B+
        W+QH2KpDga0g/xaQfxPI16zbvxlFn7EEn2flcUuLiRwED++rgCZQwKCHvU0g73oIzzoIT2O5LvoMTOLK
        OaZ3LY1rAcntoOCOCrhRh9xrINyrIFwrIFwrIdyrUfA0MynzwjSWD3cRk62UD1qI+XYT8+6kvMdEmstA
        2ssNlBtvpNx4wy8/b6DPj5Y/q/5w/0/fASrd/PvY1rrOAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGhoAAAEAIAAgCwAAFgAAACgAAAAaAAAANAAAAAEAIAAAAAAAkAoAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAE8AAACbAAAA4gAAAMQAAAAOAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAfAAAAZgAAAKoAAADzAAAA/wAAAP8AAAD/AAAA/wAAALcAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAADsAAACHAAAA0gAAAP8AAAD/AAAA/wAA
        AP4AAADLAAAAfwAAAEoAAADsAAAA/wAAAIsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAARAAAAKMAAADsAAAA/wAAAP8AAAD/AAAA8wAAAK0AAABiAAAAGAAAAAAAAAAAAAAAAAAA
        AD8AAAD6AAAA/wAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH0AAAD+AAAA/wAA
        AP8AAADcAAAAkQAAAEUAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGUAAAD/AAAA+AAA
        ADsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABOAAAA/wAAAPEAAAB3AAAAKAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJEAAAD/AAAA6QAAAB8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAMAAAAD/AAAAWgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAMAAAAGwAAAAAAAAAAAAAABAAAALgAAAD/AAAA0QAAAAwAAAAAAAAAAAAAAAAAAAAAAAAA8gAA
        AP8AAAATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAByAAAAuwAAAPgAAAD7AAAAUAAA
        AAAAAAAAAAAAEAAAANcAAAD/AAAAsAAAAAIAAAAAAAAAAAAAAAAAAAD1AAAA/wAAAA8AAAAAAAAAAAAA
        AAAAAAAKAAAATAAAAJUAAADeAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD1AAAANgAAAAAAAAAAAAAAJQAA
        AO0AAAD/AAAAhgAAAAAAAAAAAAAAAAAAAMUAAAD/AAAAiQAAADMAAABvAAAAuAAAAPcAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADoAAAAIQAAAAAAAAAAAAAAQwAAAPsAAAD+AAAAXAAA
        AAAAAAAAAAAAdQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADXAAAAEQAAAAAAAAAAAAAAYwAAAP8AAAD3AAAAOAAAAAAAAAAXAAAA8QAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAC/AAAABgAAAAAAAAAAAAAAlQAAAP8AAADnAAAAHQAAAAAAAABPAAAA/AAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACjAAAAAQAA
        AAAAAAAEAAAAvAAAAP8AAACqAAAAAAAAAAAAAABnAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACCAAAAAAAAAAAAAABhAAAA/wAA
        AJ4AAAAAAAAAAAAAAAAAAACBAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAABgAAAAAAAAAHEAAAD/AAAAlQAAAAAAAAAAAAAAAAAA
        AAAAAACaAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAPoAAABDAAAAOgAAAP8AAAC5AAAAAAAAAAAAAAAAAAAAAAAAAAQAAACyAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA4AAAAKEAAABiAAAAOAAAALAAAAD/AAAA/wAA
        APAAAAArAAAAWwAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAADGAAAA/wAAAP8AAAD/AAAA/wAA
        ANoAAACcAAAAXQAAAB8AAAAAAAAAAAAAAAAAAAAAAAAACQAAAOYAAAD/AAAA/wAAAOAAAAAZAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMAAADXAAAA/wAAAP8AAACDAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAZAAAAWAAAAJUAAADVAAAA/wAAAP8AAAD/AAAA/wAAAMwAAAALAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAB8AAADlAAAA/wAAAPEAAABAAAAAIgAAAF4AAACcAAAA2gAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AC4AAADwAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAuwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAD4AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAOoAAACyAAAAeQAAAD8AAAAGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFYAAAD9AAAA/wAAAP8AAAD/AAAA/wAA
        APwAAADVAAAAogAAAGYAAAArAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGcAAADhAAAAtQAAAH0AAABDAAAADQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////wP/gf8D/AD/A8AA/wMAOH8CAfw/AB/+HwB/5g8AfwMHAHABhwAAAMMAAABhAAAAMAIAA
        BADAAAYA4AACAPAAAADwAAAA+AHgQPwfAAD+AAAA/wAAAP+AAAD/wAPA/+B/wP///8A=
</value>
  </data>
</root>